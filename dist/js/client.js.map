{"version":3,"file":"client.js","sourceRoot":"","sources":["../../src/js/client.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,UAAU,EAAS,MAAM,cAAc,CAAC;AAGjD,OAAO,EAAE,kBAAkB,EAAsB,MAAM,WAAW,CAAC;AACnE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,WAAW,CAAC;AAElD;;;;;GAKG;AACH,MAAM,OAAO,iBAAkB,SAAQ,UAGtC;IACC;;;OAGG;IACH,YAAmB,OAA2B;QAC5C,KAAK,CAAC,kBAAkB,EAAE,OAAO,CAAC,CAAC;IACrC,CAAC;IAED;;OAEG;IACO,aAAa,CACrB,KAAY,EACZ,KAAa,EACb,IAAgB;QAEhB,KAAK,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,IAAI,YAAY,CAAC;QAChD,KAAK,CAAC,GAAG,mCACJ,KAAK,CAAC,GAAG,KACZ,IAAI,EAAE,QAAQ,EACd,QAAQ,EAAE;gBACR,GAAG,CAAC,CAAC,KAAK,CAAC,GAAG,IAAI,KAAK,CAAC,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBAC5C;oBACE,IAAI,EAAE,0BAA0B;oBAChC,OAAO,EAAE,WAAW;iBACrB;aACF,EACD,OAAO,EAAE,WAAW,GACrB,CAAC;QAEF,OAAO,KAAK,CAAC,aAAa,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;IACjD,CAAC;IAED;;;OAGG;IACI,WAAW;QAChB,IAAI,CAAC,WAAW,EAAE,CAAC,WAAW,EAAE,CAAC;IACnC,CAAC;CACF","sourcesContent":["import { BaseClient, Scope } from \"@sentry/core\";\nimport { Event, EventHint } from \"@sentry/types\";\n\nimport { ReactNativeBackend, ReactNativeOptions } from \"./backend\";\nimport { SDK_NAME, SDK_VERSION } from \"./version\";\n\n/**\n * The Sentry React Native SDK Client.\n *\n * @see ReactNativeOptions for documentation on configuration options.\n * @see SentryClient for usage documentation.\n */\nexport class ReactNativeClient extends BaseClient<\n  ReactNativeBackend,\n  ReactNativeOptions\n> {\n  /**\n   * Creates a new React Native SDK instance.\n   * @param options Configuration options for this SDK.\n   */\n  public constructor(options: ReactNativeOptions) {\n    super(ReactNativeBackend, options);\n  }\n\n  /**\n   * @inheritDoc\n   */\n  protected _prepareEvent(\n    event: Event,\n    scope?: Scope,\n    hint?: EventHint\n  ): PromiseLike<Event | null> {\n    event.platform = event.platform || \"javascript\";\n    event.sdk = {\n      ...event.sdk,\n      name: SDK_NAME,\n      packages: [\n        ...((event.sdk && event.sdk.packages) || []),\n        {\n          name: \"npm:@sentry/react-native\",\n          version: SDK_VERSION,\n        },\n      ],\n      version: SDK_VERSION,\n    };\n\n    return super._prepareEvent(event, scope, hint);\n  }\n\n  /**\n   * If native client is available it will trigger a native crash.\n   * Use this only for testing purposes.\n   */\n  public nativeCrash(): void {\n    this._getBackend().nativeCrash();\n  }\n}\n"]}